# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Github Actions Java CI with Maven

on: [push]
  

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Step 1 - Checkout main branch from GitHub
        uses: actions/checkout@v2
    
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          
      - name: Build with Maven
        run: mvn --batch-mode --update-snapshots verify
        
      - name: jacoco-badge-generator
        uses: cicirello/jacoco-badge-generator@v2.6.1

      # Execute Codacy Analysis CLI and generate a SARIF output with the security issues identified during the analysis
      - name: Run Codacy Analysis CLI
        uses: codacy/codacy-analysis-cli-action@d840f886c4bd4edc059706d09c6a1586111c540b
        with:
          # Check https://github.com/codacy/codacy-analysis-cli#project-token to get your project token from your Codacy repository
          # You can also omit the token and run the tools that support default configurations
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: coverage.xml
          

          
      - name : Step 5 - List the current directory
        run : ls -a
      
      - name : Step 6
        run: |
          cd target
          ls -a
